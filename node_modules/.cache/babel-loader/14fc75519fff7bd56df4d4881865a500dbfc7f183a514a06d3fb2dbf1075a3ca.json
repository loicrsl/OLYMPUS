{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ispii\\\\Desktop\\\\DESIGN PACK LOIC\\\\WEBSITE\\\\Olympus_Project_Structure_V2\\\\src\\\\components\\\\AudioControls.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AudioControls = () => {\n  _s();\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n  useEffect(() => {\n    const seenIntro = localStorage.getItem('seenIntro');\n    if (seenIntro) {\n      const autoPlay = setTimeout(() => {\n        audioRef.current.volume = 0.4;\n        audioRef.current.play().catch(() => {});\n        setIsPlaying(true);\n      }, 1000);\n      return () => clearTimeout(autoPlay);\n    }\n  }, []);\n  const togglePlay = () => {\n    if (!audioRef.current) return;\n    if (audioRef.current.paused) {\n      audioRef.current.play();\n      setIsPlaying(true);\n    } else {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: 'fixed',\n      bottom: 20,\n      right: 20,\n      zIndex: 10000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: togglePlay,\n      style: {\n        background: 'transparent',\n        border: '1px solid #4f4f58',\n        color: '#4f4f58',\n        padding: '0.5rem 1rem',\n        borderRadius: '6px',\n        fontWeight: 500\n      },\n      children: isPlaying ? '⏸ Ambiance' : '▶️ Ambiance'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audioRef,\n      loop: true,\n      src: \"/assets/audio/ambience-loop.mp3\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AudioControls, \"PqCJVnA8ptXzv4jf6ihO4CXpWRw=\");\n_c = AudioControls;\nexport default AudioControls;\nvar _c;\n$RefreshReg$(_c, \"AudioControls\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","AudioControls","_s","audioRef","isPlaying","setIsPlaying","seenIntro","localStorage","getItem","autoPlay","setTimeout","current","volume","play","catch","clearTimeout","togglePlay","paused","pause","style","position","bottom","right","zIndex","children","onClick","background","border","color","padding","borderRadius","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","ref","loop","src","_c","$RefreshReg$"],"sources":["C:/Users/ispii/Desktop/DESIGN PACK LOIC/WEBSITE/Olympus_Project_Structure_V2/src/components/AudioControls.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst AudioControls = () => {\n  const audioRef = useRef(null);\n  const [isPlaying, setIsPlaying] = useState(false);\n\n  useEffect(() => {\n    const seenIntro = localStorage.getItem('seenIntro');\n    if (seenIntro) {\n      const autoPlay = setTimeout(() => {\n        audioRef.current.volume = 0.4;\n        audioRef.current.play().catch(() => {});\n        setIsPlaying(true);\n      }, 1000);\n      return () => clearTimeout(autoPlay);\n    }\n  }, []);\n\n  const togglePlay = () => {\n    if (!audioRef.current) return;\n    if (audioRef.current.paused) {\n      audioRef.current.play();\n      setIsPlaying(true);\n    } else {\n      audioRef.current.pause();\n      setIsPlaying(false);\n    }\n  };\n\n  return (\n    <div style={{ position: 'fixed', bottom: 20, right: 20, zIndex: 10000 }}>\n      <button\n        onClick={togglePlay}\n        style={{\n          background: 'transparent',\n          border: '1px solid #4f4f58',\n          color: '#4f4f58',\n          padding: '0.5rem 1rem',\n          borderRadius: '6px',\n          fontWeight: 500,\n        }}\n      >\n        {isPlaying ? '⏸ Ambiance' : '▶️ Ambiance'}\n      </button>\n      <audio ref={audioRef} loop src=\"/assets/audio/ambience-loop.mp3\" />\n    </div>\n  );\n};\n\nexport default AudioControls;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEjDF,SAAS,CAAC,MAAM;IACd,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACnD,IAAIF,SAAS,EAAE;MACb,MAAMG,QAAQ,GAAGC,UAAU,CAAC,MAAM;QAChCP,QAAQ,CAACQ,OAAO,CAACC,MAAM,GAAG,GAAG;QAC7BT,QAAQ,CAACQ,OAAO,CAACE,IAAI,CAAC,CAAC,CAACC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC;QACvCT,YAAY,CAAC,IAAI,CAAC;MACpB,CAAC,EAAE,IAAI,CAAC;MACR,OAAO,MAAMU,YAAY,CAACN,QAAQ,CAAC;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAI,CAACb,QAAQ,CAACQ,OAAO,EAAE;IACvB,IAAIR,QAAQ,CAACQ,OAAO,CAACM,MAAM,EAAE;MAC3Bd,QAAQ,CAACQ,OAAO,CAACE,IAAI,CAAC,CAAC;MACvBR,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLF,QAAQ,CAACQ,OAAO,CAACO,KAAK,CAAC,CAAC;MACxBb,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACEL,OAAA;IAAKmB,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE,EAAE;MAAEC,KAAK,EAAE,EAAE;MAAEC,MAAM,EAAE;IAAM,CAAE;IAAAC,QAAA,gBACtExB,OAAA;MACEyB,OAAO,EAAET,UAAW;MACpBG,KAAK,EAAE;QACLO,UAAU,EAAE,aAAa;QACzBC,MAAM,EAAE,mBAAmB;QAC3BC,KAAK,EAAE,SAAS;QAChBC,OAAO,EAAE,aAAa;QACtBC,YAAY,EAAE,KAAK;QACnBC,UAAU,EAAE;MACd,CAAE;MAAAP,QAAA,EAEDpB,SAAS,GAAG,YAAY,GAAG;IAAa;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACTnC,OAAA;MAAOoC,GAAG,EAAEjC,QAAS;MAACkC,IAAI;MAACC,GAAG,EAAC;IAAiC;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChE,CAAC;AAEV,CAAC;AAACjC,EAAA,CA7CID,aAAa;AAAAsC,EAAA,GAAbtC,aAAa;AA+CnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}